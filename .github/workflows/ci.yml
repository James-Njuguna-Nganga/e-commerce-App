name: Learning Events and artifatcs
on: 
    pull_request:
        types:
            - opened
            # - closed

    push:
        branches:
            - "master"
            # - "dev-**" dev- oxgg, dev-eeghw
    workflow_dispatch: # Never forget the full colon at the end
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            # - name: Use Node.js
            #   uses: actions/setup-node@v4
            #   with:
            #     node-version: '18'
            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: key-${{hashFiles('**/package-lock.json')}} ## use single quotes only
            
            
            - name: Install Dependencies
              run: npm ci

            - name: Run test Code
              run: npm run test
    build:

        runs-on: ubuntu-latest
        needs: test
        outputs:
            js_file: ${{steps.publish.outputs.js_file}}

        steps:
            - name: Get Code
              uses: actions/checkout@v4

              # subsequent run
            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: key-${{hashFiles('**/package-lock.json')}} ## use single quotes only
            
            - name: Install Dependencies
              run: npm ci

            - name: Build Project
              run: npm run build

            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: dist-files
                path: dist
                # path: |
                #     dist
                #     package.json
            - name: Publish JS File
              id: publish
              run: echo "js_file=$(find dist/assets/*.js -type f | head -n 1)" >>$GITHUB_OUTPUT #This Value should persist
                

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Dowload artifacts 
              uses: actions/download-artifact@v4
              with:
                name: dist-files

            - name : output Content
              run: ls
            
            - name: Output JS File
              run: echo "${{needs.build.outputs.js_file}}"

            - name: Output Something
              run: echo "Deploying..."
            # - name: print
            #   run: echo "${{toJson(github)}}"